<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="5" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-08-17T12:15:06 MSK" name="Registration page Tests" finished-at="2023-08-17T12:15:22 MSK" duration-ms="15698">
    <groups>
    </groups>
    <test started-at="2023-08-17T12:15:06 MSK" name="Registration page Tests" finished-at="2023-08-17T12:15:22 MSK" duration-ms="15698">
      <class name="test.RegistrationPageTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.RegistrationPageTest@566d0c69]" started-at="2023-08-17T12:15:06 MSK" name="setUp" description="setUp() gets the driver type from the bundle" finished-at="2023-08-17T12:15:12 MSK" duration-ms="5823" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="preRegisterUserForRegistrationPageTests()[pri:0, instance:test.RegistrationPageTest@566d0c69]" started-at="2023-08-17T12:15:12 MSK" name="preRegisterUserForRegistrationPageTests" finished-at="2023-08-17T12:15:15 MSK" duration-ms="2523" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preRegisterUserForRegistrationPageTests -->
        <test-method is-config="true" signature="initialPage()[pri:0, instance:test.RegistrationPageTest@566d0c69]" started-at="2023-08-17T12:15:15 MSK" name="initialPage" description="Initializes and opens registration page" finished-at="2023-08-17T12:15:15 MSK" duration-ms="166" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialPage -->
        <test-method signature="preregisteredUserFromBundleRegistrationTest()[pri:0, instance:test.RegistrationPageTest@566d0c69]" started-at="2023-08-17T12:15:15 MSK" name="preregisteredUserFromBundleRegistrationTest" description="Registration of user from bundle " finished-at="2023-08-17T12:15:16 MSK" duration-ms="988" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preregisteredUserFromBundleRegistrationTest -->
        <test-method is-config="true" signature="initialPage()[pri:0, instance:test.RegistrationPageTest@566d0c69]" started-at="2023-08-17T12:15:16 MSK" name="initialPage" description="Initializes and opens registration page" finished-at="2023-08-17T12:15:16 MSK" duration-ms="177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialPage -->
        <test-method signature="randomUserRegistrationTest()[pri:0, instance:test.RegistrationPageTest@566d0c69]" started-at="2023-08-17T12:15:16 MSK" name="randomUserRegistrationTest" description="Random user registration test" finished-at="2023-08-17T12:15:18 MSK" duration-ms="1654" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- randomUserRegistrationTest -->
        <test-method is-config="true" signature="initialPage()[pri:0, instance:test.RegistrationPageTest@566d0c69]" started-at="2023-08-17T12:15:18 MSK" name="initialPage" description="Initializes and opens registration page" finished-at="2023-08-17T12:15:18 MSK" duration-ms="157" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialPage -->
        <test-method signature="registerUserWithInvalidData(utils.RegistrationOptions)[pri:0, instance:test.RegistrationPageTest@566d0c69]" started-at="2023-08-17T12:15:18 MSK" name="registerUserWithInvalidData" description="Register user with invalid data input" data-provider="dataProviderMethodForInvalidDataTest" finished-at="2023-08-17T12:15:19 MSK" duration-ms="1038" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NAME]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerUserWithInvalidData -->
        <test-method is-config="true" signature="initialPage()[pri:0, instance:test.RegistrationPageTest@566d0c69]" started-at="2023-08-17T12:15:19 MSK" name="initialPage" description="Initializes and opens registration page" finished-at="2023-08-17T12:15:19 MSK" duration-ms="142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialPage -->
        <test-method signature="registerUserWithInvalidData(utils.RegistrationOptions)[pri:0, instance:test.RegistrationPageTest@566d0c69]" started-at="2023-08-17T12:15:19 MSK" name="registerUserWithInvalidData" description="Register user with invalid data input" data-provider="dataProviderMethodForInvalidDataTest" finished-at="2023-08-17T12:15:21 MSK" duration-ms="1319" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[EMAIL]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerUserWithInvalidData -->
        <test-method is-config="true" signature="initialPage()[pri:0, instance:test.RegistrationPageTest@566d0c69]" started-at="2023-08-17T12:15:21 MSK" name="initialPage" description="Initializes and opens registration page" finished-at="2023-08-17T12:15:21 MSK" duration-ms="145" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialPage -->
        <test-method signature="registerUserWithInvalidData(utils.RegistrationOptions)[pri:0, instance:test.RegistrationPageTest@566d0c69]" started-at="2023-08-17T12:15:21 MSK" name="registerUserWithInvalidData" description="Register user with invalid data input" data-provider="dataProviderMethodForInvalidDataTest" finished-at="2023-08-17T12:15:22 MSK" duration-ms="1159" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PASSWORD]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerUserWithInvalidData -->
        <test-method is-config="true" signature="afterTestCompleted()[pri:0, instance:test.RegistrationPageTest@566d0c69]" started-at="2023-08-17T12:15:22 MSK" name="afterTestCompleted" description="closes the browser" finished-at="2023-08-17T12:15:22 MSK" duration-ms="259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTestCompleted -->
      </class> <!-- test.RegistrationPageTest -->
    </test> <!-- Registration page Tests -->
  </suite> <!-- Registration page Tests -->
</testng-results>
